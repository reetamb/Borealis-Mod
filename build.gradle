buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        //maven { url='https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        //classpath 'org.spongepowered:mixingradle:0.7.+'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
//apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = project.borealis_version
group = 'com.reetam.borealis'
archivesBaseName = 'borealis-'+project.mc_version

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

//mixin {
//    add sourceSets.main, "borealis.refmap.json"
//    config 'borealis.mixins.json'
//}

minecraft {
    mappings channel: 'parchment', version: project.parchment_version+'-'+project.mc_version

    runs {
        client {
            workingDirectory project.file('run')

            //arg "-mixin.config=borealis.mixins.json"

            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            mods {
                borealis {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            //arg "-mixin.config=borealis.mixins.json"

            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            mods {
                borealis {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            args '--mod', 'borealis', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), '--existing', file('src/generated/resources/')

            environment 'target', 'fmluserdevdata'

            mods {
                borealis {
                    source sourceSets.main
                }
            }
        }
    }

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

dependencies {

    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"

    //annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title": "borealis",
                "Specification-Vendor": "reetam",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"reetam",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                //"MixinConfigs": "borealis.mixins.json"
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

repositories {
    //maven { url='https://repo.spongepowered.org/repository/maven-public/' }
}
